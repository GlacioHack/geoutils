# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: ${{ matrix.os }}, python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Setup environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        mamba-version: "*"
        channels: conda-forge
        channel-priority: strict
        activate-environment: geoutils

    - name: Get month for resetting cache
      run: echo "::set-output name=month::$(/bin/date -u '+%Y%m')"
      shell: bash

    - name: Cache conda env
      uses: actions/cache@v2
      with:
        path: ${{ env.CONDA }}/envs
        key: conda-${{ matrix.os }}--${{ matrix.python-version }}--${{ steps.get-date.outputs.month }}-${{ hashFiles('environment.yml') }}-${{ env.CACHE_NUMBER }}
      env:
        CACHE_NUMBER: 1 # Increase this value to reset cache if environment.yml has not changed
      id: cache

    - name: Update environment
      run: |
        mamba env update -n geoutils python=${{ matrix.python-version }}
        mamba env update -n geoutils -f environment.yml
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Install project
      run: |
        pip install -e . --no-dependencies

    # This steps allows us to check the "import geoutils" with the base environment provided to users, before adding
    # development-specific dependencies by differencing the env and dev-env yml files
    - name: Check normal environment import
      run: |
        python -c "import geoutils"

    - name: Update environment with dev dependencies
      run: |
        mamba env update --name geoutils --file dev-environment.yml

    - name: Re-install project
      run: |
        pip install -e . --no-dependencies

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pip install pytest-cov coveralls
        pytest -ra --cov=geoutils/

    - name: Converting coverage to LCOV format
      run: |
        pip install coveragepy-lcov
        coveragepy-lcov --data_file_path .coverage --output_file_path coverage.info

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        flag-name: run-${{ matrix.test_number }}
        path-to-lcov: coverage.info
        parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Upload to Coveralls finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
